Index: linux-4.14.18/include/linux/if_bridge.h
===================================================================
--- linux-4.14.18.orig/include/linux/if_bridge.h
+++ linux-4.14.18/include/linux/if_bridge.h
@@ -53,6 +53,7 @@ struct br_ip_list {
 #define BR_DEFAULT_AGEING_TIME	(300 * HZ)
 
 extern void brioctl_set(int (*ioctl_hook)(struct net *, unsigned int, void __user *));
+extern void br_dev_update_stats(struct net_device *dev, struct rtnl_link_stats64 *nlstats);
 
 typedef int br_should_route_hook_t(struct sk_buff *skb);
 extern br_should_route_hook_t __rcu *br_should_route_hook;
Index: linux-4.14.18/net/bridge/br_if.c
===================================================================
--- linux-4.14.18.orig/net/bridge/br_if.c
+++ linux-4.14.18/net/bridge/br_if.c
@@ -654,3 +654,28 @@ void br_port_flags_change(struct net_bri
 	if (mask & BR_AUTO_MASK)
 		nbp_update_port_count(br);
 }
+
+/* Update bridge statistics for bridge packets processed by offload engines */
+void br_dev_update_stats(struct net_device *dev, struct rtnl_link_stats64 *nlstats)
+{
+		struct net_bridge *br;
+		struct pcpu_sw_netstats *stats;
+
+		/*
+		 * Is this a bridge?
+		 */
+		if (!(dev->priv_flags & IFF_EBRIDGE)) {
+			return;
+		}
+
+		br = netdev_priv(dev);
+		stats = this_cpu_ptr(br->stats);
+
+		u64_stats_update_begin(&stats->syncp);
+		stats->rx_packets += nlstats->rx_packets;
+		stats->rx_bytes += nlstats->rx_bytes;
+		stats->tx_packets += nlstats->tx_packets;
+		stats->tx_bytes += nlstats->tx_bytes;
+		u64_stats_update_end(&stats->syncp);
+}
+EXPORT_SYMBOL_GPL(br_dev_update_stats);
